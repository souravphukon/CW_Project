<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.vmac.chatbot"
    android:installLocation="internalOnly"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="27" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.CAMERA" />

    <uses-feature android:name="android.hardware.camera" />

    <uses-permission android:name="android.permission.FLASHLIGHT" />

    <uses-feature
        android:name="android.hardware.camera.flash"
        android:required="false" />
    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <!--
        GCM permission to ensure that only this application can
        receive the messages and registration result. This must be of
        the format <app-package-name>.C2D_MESSAGE for it to work.
    -->
    <permission
        android:name="com.androd.capgemini.cwo.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.androd.capgemini.cwo.C2D_MESSAGE" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" /> <!-- TODO: Remove the -sdk-23 tag when the minsdk version is 23 -->
    <uses-permission-sdk-23 android:name="android.permission.USE_FINGERPRINT" /> <!-- Include required permissions for Google Maps API to run. -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <application
        android:name="com.example.vmac.chatbot.MainApplication"
        android:allowBackup="true"
        android:debuggable="true"
        android:icon="@mipmap/app_icon"
        android:label="@string/app_name"
        android:manageSpaceActivity="com.salesforce.androidsdk.ui.ManageSpaceActivity"
        android:testOnly="true"
        android:theme="@style/AppTheme" >
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="AIzaSyByGh4BmrXnmBFMQ4g9wswKwKHHBM4vrcE" />

        <!--
    	<application
	    android:label="@string/app_name"
		android:theme="@style/AppTheme">
        -->

        <activity
            android:name="com.example.vmac.chatbot.HomeActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Launcher screen -->
        <activity
            android:name="com.example.vmac.chatbot.MainActivity"
            android:label="@string/app_name"
            android:theme="@android:style/Theme.NoTitleBar.Fullscreen" >
        </activity>

        <!-- Login activity -->
        <!--
            Launch mode of "singleInstance" ensures that the activity isn't restarted
            by a callback from Chrome custom tab when auth flow is complete. This is
            required for the Chrome custom tab auth flow to work correctly.
        -->
        <!--
            To enable browser based authentication, uncomment the lines below and replace
            'scheme', 'host' and 'path' with their corresponding values from your connected app.

            For example, if the callback URL of your connected app is
            "testsfdc:///mobilesdk/detect/oauth/done",
            'scheme' would be "testsfdc", 'host' would be "*" since it doesn't exist, and
            'path' would be "/mobilesdk/detect/oauth/done".

            If the callback URL is "sfdc://login.salesforce.com/oauth/done",
            'scheme' would be "sfdc", 'host' would be "login.salesforce.com",
            and 'path' would be "/oauth/done".
        -->

        <activity
            android:name="com.salesforce.androidsdk.ui.LoginActivity"
            android:launchMode="singleInstance"
            android:theme="@style/SalesforceSDK.ActionBarTheme" >
            <intent-filter>
                <data
                    android:host="*"
                    android:path="/success"
                    android:scheme="sdfc" />

                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!-- IDP account picker activity -->
        <!--
            To enable this app as an IDP app that's capable of handling authentication
            requests originating from other SP apps, uncomment the lines below and replace
            'scheme' and 'host' with the values you wish to use to define your IDP app.
            The URI constructed from this must be unique and will be set in the SP app
            as well. This will be used to launch the IDP app from the SP app.

            In the example given below, 'scheme' is "com.androd.capgemini.cwo" and
            'host' is "authenticator". The full URI that needs to be set on the SP app would be
            "com.androd.capgemini.cwo://authenticator".
        -->
        <!--
        <activity android:name="com.salesforce.androidsdk.auth.idp.IDPAccountPickerActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme">

            <intent-filter>
                <data android:scheme="com.androd.capgemini.cwo"
                    android:host="authenticator" />
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        -->
        <!-- SmartStore Inspector screen -->
        <activity
            android:name="com.salesforce.androidsdk.smartstore.ui.SmartStoreInspectorActivity"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Metadata for supported app restrictions -->
        <meta-data
            android:name="android.content.APP_RESTRICTIONS"
            android:resource="@xml/app_restrictions" /> <!-- Service required for authentication -->
        <service
            android:name="com.salesforce.androidsdk.auth.AuthenticatorService"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service> <!-- Passcode activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.PasscodeActivity"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Manage space activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.ManageSpaceActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Choose server activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.ServerPickerActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Account switcher activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.AccountSwitcherActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- IDP webview activity -->
        <activity
            android:name="com.salesforce.androidsdk.auth.idp.IDPCodeGeneratorActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Dev info activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.DevInfoActivity"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Receiver for IDP initiated login flow -->
        <receiver
            android:name="com.salesforce.androidsdk.auth.idp.IDPInititatedLoginReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.salesforce.IDP_LOGIN_REQUEST" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver> <!-- Google Play Services Push Registration -->
        <!--
            Push notification services and receivers. The 'category' attribute
            here should match the <app-package-name> attribute.
        -->
        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.example.vmac.chatbot" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.salesforce.androidsdk.push.SFDCGcmListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>
        <service
            android:name="com.salesforce.androidsdk.push.SFDCInstanceIDListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID" />
            </intent-filter>
        </service>
        <service
            android:name="com.salesforce.androidsdk.push.SFDCRegistrationIntentService"
            android:exported="false" >
        </service>

        <receiver
            android:name="com.salesforce.androidsdk.push.PushService$SFDCRegistrationRetryAlarmReceiver"
            android:exported="false" />

        <service
            android:name="com.salesforce.androidsdk.push.PushService"
            android:exported="false" />
        <service
            android:name="com.salesforce.androidsdk.analytics.AnalyticsPublisherService"
            android:exported="false" />

        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="com.ibm.watson.developer_cloud.android.provider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" >
            </meta-data>
        </provider>

        <meta-data
            android:name="android.support.VERSION"
            android:value="26.0.0" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <provider
            android:name="com.squareup.picasso.PicassoProvider"
            android:authorities="com.example.vmac.chatbot.com.squareup.picasso"
            android:exported="false" />
        <provider
            android:name="com.android.tools.ir.server.InstantRunContentProvider"
            android:authorities="com.example.vmac.chatbot.com.android.tools.ir.server.InstantRunContentProvider"
            android:multiprocess="true" />
    </application>

</manifest>